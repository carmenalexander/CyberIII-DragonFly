name: benchmark-tests

on:
  workflow_dispatch:
  schedule:
    - cron: "0 9 * * *" # run at 6 AM UTC



jobs:
  benchmark:
    strategy:
      matrix:
        config:
          - apiVersion: "dragonflydb.io/v1alpha1"
            kind: "Dragonfly"
            metadata:
              labels:
                app.kubernetes.io/name: "dragonfly"
                app.kubernetes.io/instance: "dragonfly-sample"
                app.kubernetes.io/part-of: "dragonfly-operator"
                app.kubernetes.io/managed-by: "kustomize"
                app.kubernetes.io/created-by: "dragonfly-operator"
              name: "dragonfly-sample"
            spec:
              image: "ghcr.io/dragonflydb/dragonfly-weekly:latest"
              args: ["--cache_mode"]
              replicas: 2
              resources:
                requests:
                  cpu: "2"
                  memory: "2000Mi"
                limits:
                  cpu: "2"
                  memory: "2000Mi"

#    runs-on: [self-hosted, linux, x86, benchmark]
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/romange/benchmark-dev:latest
      options: --cpus 2

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: install sudo
        run: |
          apt-get update
          apt-get install sudo


      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

#https://github.com/helm/kind-action/issues/30
      - name: FIX Kind on container issue
        run: |
          export KUBECONFIG=$HOME/.kube/config
          export KIND_EXPERIMENTAL_DOCKER_NETWORK=${{ job.container.network }}
          echo ${KIND_EXPERIMENTAL_DOCKER_NETWORK}
          # Install Kind
          [ $(uname -m) = x86_64 ] && curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.22.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind
          # Install Kind Cluster
          kind create cluster \
            --kubeconfig $KUBECONFIG \
            --config=.github/workflows/kind-config.yaml \
            --name action || true
          # Install Kubectl
          curl -LO https://dl.k8s.io/release/v1.29.2/bin/linux/amd64/kubectl
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          # Kubectl set context
          kubectl config set-cluster kind-action --server=https://action-control-plane:6443 

#      - name: Create k8s Kind Cluster
#        uses: helm/kind-action@v1.9.0
#        with:
#          kubectl_version: v1.28.0
#          cluster_name: action
#          config: .github/workflows/kind-config.yaml


      - name: Install the CRD and Operator
        run: |
          # Install the CRD and Operator
          kubectl apply -f https://raw.githubusercontent.com/dragonflydb/dragonfly-operator/main/manifests/dragonfly-operator.yaml
      - name: Apply Configuration
        run: |
          echo '${{ toJson(matrix.config) }}' | kubectl apply -f -

      - name: Wait For Service
        run: |
          kubectl wait dragonfly/dragonfly-sample --for=jsonpath='{.status.phase}'=ready --timeout=120s
          kubectl wait pods --selector app=dragonfly-sample --for condition=Ready --timeout=120s
          kubectl describe pod dragonfly-sample-0

      - name: Run Benchmark
        run: |
          nohup kubectl port-forward service/dragonfly-sample 6379:6379 &
          sleep 5
          redis-cli ping
          # run small memtier benchmark
          memtier_benchmark  --pipeline=30 --key-maximum=10000 -c 10 -t 8 --requests=500000 --expiry-range=10-100 --reconnect-interval=10000 --distinct-client-seed --hide-histogram

      - name: Server checks
        run: |
          pip3 install -r tools/requirements.txt
          python tools/benchmark_checks.py
